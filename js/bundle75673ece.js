var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
var GameConstroll_1 = require("./script/GameConstroll");
var BeanScript_1 = require("./script/BeanScript");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
        reg("script/GameConstroll.ts", GameConstroll_1.default);
        reg("script/BeanScript.ts", BeanScript_1.default);
    };
    GameConfig.width = 1136;
    GameConfig.height = 640;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "gameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/BeanScript":6,"./script/GameConstroll":8,"./script/GameUI":10}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// 四叉树的实现
var Quadtree = /** @class */ (function () {
    function Quadtree(level, bounds) {
        this.MAX_OBJECTS = 10;
        this.MAX_LEVELS = 5;
        this.nodes = [];
        this.level = level;
        this.bounds = bounds;
        this.objects = [];
        this.nodes = [];
    }
    // clear, split, getIndex, insert和 retrieve
    Quadtree.prototype.clear = function () {
        this.objects = [];
        for (var i = 0; i < this.nodes.length; i++) {
            this.nodes[i].clear();
            this.nodes[i] = null;
        }
    };
    //将当前节点分割成4个节点。。
    Quadtree.prototype.split = function () {
        var w = this.bounds.width / 2, h = this.bounds.height / 2, x = this.bounds.x, y = this.bounds.y;
        this.nodes[0] = new Quadtree(this.level + 1, new Laya.Rectangle(x + w, y, w, h));
        this.nodes[1] = new Quadtree(this.level + 1, new Laya.Rectangle(x, y, w, h));
        this.nodes[2] = new Quadtree(this.level + 1, new Laya.Rectangle(x, y + h, w, h));
        this.nodes[3] = new Quadtree(this.level + 1, new Laya.Rectangle(x + w, y + h, w, h));
    };
    //得到这个节点的索引
    Quadtree.prototype.getIndex = function (pRect) {
        var index = -1;
        // 中线
        var v = this.bounds.x + this.bounds.width / 2, h = this.bounds.y + this.bounds.height / 2;
        var t = pRect.y < h && pRect.y + pRect.height < h, // 完全在上面
        b = pRect.y > h, // 完全在下面
        r = pRect.x > v, //右边
        l = pRect.x + pRect.width < v; //左边
        if (r) {
            if (t)
                index = 0;
            if (b)
                index = 3;
        }
        else if (l) {
            if (t)
                index = 1;
            if (b)
                index = 2;
        }
        return index;
    };
    // 插入
    Quadtree.prototype.insert = function (obj) {
        if (obj == undefined)
            return;
        if (obj instanceof Array) {
            for (var i = 0; i < obj.length; i++) {
                this.insert(obj[i]);
            }
            return;
        }
        if (this.nodes.length) {
            var index = this.getIndex(obj);
            if (index != -1) {
                this.nodes[index].insert(obj);
                return;
            }
        }
        this.objects.push(obj);
        if (this.objects.length > this.MAX_OBJECTS && this.level < this.MAX_LEVELS) {
            if (this.nodes[0] == null) {
                this.split();
            }
            var i = 0;
            while (i < this.objects.length) {
                var ind = this.getIndex(this.objects[i]);
                if (ind != -1) {
                    this.nodes[ind].insert((this.objects.splice(i, 1))[0]);
                }
                else {
                    i++;
                }
            }
        }
    };
    //所有可能和指定物品碰撞的物体
    Quadtree.prototype.retrieve = function (returnedObjects, obj) {
        if (typeof obj === undefined) {
            console.log("underfined object");
            return;
        }
        var index = this.getIndex(obj);
        if (index != -1 && this.nodes.length) {
            this.nodes[index].retrieve(returnedObjects, obj);
        }
        for (var i = 0; i < this.objects.length; i++) {
            returnedObjects.push(this.objects[i]);
        }
        return returnedObjects;
    };
    return Quadtree;
}());
exports.default = Quadtree;
},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * @Description:枚举
 * @Author: jwei
 * @Date: 2018-11-22 16:25:13
 * @LastEditTime: 2018-11-22 16:27:06
 * @LastEditors: jwei
 */
var ToolCMD = /** @class */ (function () {
    function ToolCMD() {
    }
    ToolCMD.ROCKER_MOVE = "rocker_move";
    return ToolCMD;
}());
exports.default = ToolCMD;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 工具函数
 */
var ToolUtils = /** @class */ (function () {
    function ToolUtils() {
    }
    /**
     * 得到两点的距离。。
     * @param x1
     * @param y1
     * @param x2
     * @param y2
     */
    ToolUtils.getDistance = function (x1, y1, x2, y2) {
        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));
    };
    return ToolUtils;
}());
exports.default = ToolUtils;
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 食物的脚本
 */
var BeanScript = /** @class */ (function (_super) {
    __extends(BeanScript, _super);
    function BeanScript() {
        return _super.call(this) || this;
    }
    BeanScript.prototype.onEnable = function () {
        //    var sp:Laya.Sprite=this.owner as Laya.Sprite;
    };
    BeanScript.prototype.onTriggerEnter = function () {
        //碰到就消失
        this.owner.removeSelf();
    };
    BeanScript.prototype.onDestroy = function () {
        Laya.Pool.recover("bean", this.owner);
    };
    return BeanScript;
}(Laya.Script));
exports.default = BeanScript;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../GameConfig");
/*
 * @Description: 2d相机跟随
 * @Author: jwei
 * @Date: 2018-11-22 12:03:19
 * @LastEditTime: 2018-11-23 10:58:41
 * @LastEditors: Please set LastEditors
 */
var Camera2D = /** @class */ (function () {
    function Camera2D() {
        this._mapW = 3000;
        this._mapH = 1500;
    }
    Object.defineProperty(Camera2D, "instance", {
        get: function () {
            this._instance = this._instance || new Camera2D;
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Camera2D.prototype, "cameraView", {
        get: function () {
            return this._cameraView;
        },
        enumerable: true,
        configurable: true
    });
    Camera2D.prototype.start = function (scene) {
        this._scene = scene;
        this._cameraView = new Laya.Rectangle(0, 0, GameConfig_1.default.width, GameConfig_1.default.height);
        this._scene.scrollRect = this._cameraView;
    };
    /**
     * @msg: 绑定主视角
     * @param {type}
     * @return:
     */
    Camera2D.prototype.focus = function (target) {
        this._focusTarget = target;
        this._cameraView.x = this._focusTarget.x - (GameConfig_1.default.width >> 1);
        this._cameraView.y = this._focusTarget.y - (GameConfig_1.default.height >> 1);
    };
    /**
     * @msg:实时更新
     * @param {type}
     * @return:
     */
    Camera2D.prototype.update = function () {
        if (this._focusTarget) {
            if (this._focusTarget.x > 0 && (this._focusTarget.x - GameConfig_1.default.width / 2) < this._mapW) {
                this._cameraView.x = this._focusTarget.x - (GameConfig_1.default.width >> 1);
            }
            if (this._focusTarget.y > (GameConfig_1.default.height >> 1) || (this._focusTarget.y + GameConfig_1.default.height / 2) < this._mapH) {
                this._cameraView.y = this._focusTarget.y - (GameConfig_1.default.height >> 1);
            }
        }
    };
    return Camera2D;
}());
exports.default = Camera2D;
},{"../GameConfig":1}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameUI_1 = require("./GameUI");
var ToolUtils_1 = require("../config/ToolUtils");
var Snake_1 = require("./Snake");
var Quadtree_1 = require("../config/Quadtree");
var GameData_1 = require("./GameData");
/**
 * 游戏控制脚本
 */
var GameConstroll = /** @class */ (function (_super) {
    __extends(GameConstroll, _super);
    function GameConstroll() {
        var _this = _super.call(this) || this;
        _this._beanQuadTree = null; //用四叉树保存道具，优化碰撞检测
        _this._snakeAi = [];
        return _this;
    }
    GameConstroll.prototype.onEnable = function () {
        this._gameBox = this.owner["gameBox"];
        this._beanQuadTree = new Quadtree_1.default(3, new Laya.Rectangle(0, 0, 3000, 1500));
        this._createBean();
        this._createSnakeAi();
    };
    /**
     * 生成一堆道具
     */
    GameConstroll.prototype._createBean = function () {
        for (var i = 0; i < 300; i++) {
            this._randomCreateBean(Math.random() * 3000, Math.random() * 1500);
        }
        GameData_1.default.beanQuad = this._beanQuadTree;
    };
    /**
     * 生成AI蛇
     */
    GameConstroll.prototype._createSnakeAi = function () {
        for (var i = 0; i < 5; i++) {
            this._randomCreateSnake(i * 200, i * 200, "snake" + i);
        }
        GameData_1.default.allSnakeList.push(GameUI_1.default.instance.snakeSelf);
        Laya.timer.loop(3000, this, this._snakeAiAction);
    };
    /**
     * AI蛇运动
     */
    GameConstroll.prototype._snakeAiAction = function () {
        for (var i = 0; i < this._snakeAi.length; i++) {
            this._snakeAi[i].upMove(180 - Math.random() * 360);
            this._snakeAi[i].speedNow = Math.random() < 0.9 ? "slow" : "fast";
        }
    };
    /**
     * 蛇之间的碰撞检测
     */
    GameConstroll.prototype._snakeCollision = function () {
        var head, bodys, body;
        for (var i = 0; i < GameData_1.default.allSnakeList.length; i++) {
            head = GameData_1.default.allSnakeList[i];
            for (var j = 0; j < GameData_1.default.allSnakeList.length; j++) {
                bodys = GameData_1.default.allSnakeList[j];
                if (head != bodys && !head.InvincibleSecond && !bodys.InvincibleSecond) { //不是同一条蛇，且不能有蛇是无敌的。。
                    //如果是碰头了。。就一起消失。。
                    for (var k = 1; k < bodys.bodyList.length; k++) {
                        body = bodys.bodyList[k];
                        if (ToolUtils_1.default.getDistance(head.x, head.y, body.x, body.y) <= 40) {
                            console.log(head.id + "碰到了" + bodys.id);
                            this._snakeKillChangeBean(head);
                            if (!head.AI) {
                                GameUI_1.default.instance.showUI(GameUI_1.UIName.OVERUI);
                            }
                            head.destroy();
                            GameData_1.default.allSnakeList.splice(i, 1);
                            return;
                        }
                    }
                }
            }
        }
    };
    /**
     * 碰撞后留下的道具
     */
    GameConstroll.prototype._snakeKillChangeBean = function (sn) {
        for (var i = 0; i < sn.bodyList.length; i++) {
            var body = sn.bodyList[i];
            this._randomCreateBean(body.x, body.y, sn.snakeColNum, Math.floor(Math.random() * 15 + 5));
        }
    };
    /**
     *  随机生成一个道具
     */
    GameConstroll.prototype._randomCreateBean = function (x, y, col, w) {
        if (col === void 0) { col = Math.floor(Math.random() * 5 + 1); }
        if (w === void 0) { w = Math.floor(Math.random() * 5 + 5); }
        var bean = Laya.Pool.getItemByCreateFun("bean", this.Bean.create, this.Bean);
        bean.loadImage("images/bean" + col + ".png");
        bean.width = w;
        bean.height = w;
        bean.pos(x, y);
        GameData_1.default.beanList.push(bean);
        this._beanQuadTree.insert(bean);
        this._gameBox.addChild(bean);
    };
    /**
     * 在容器里生成蛇,默认ai蛇
     */
    GameConstroll.prototype._randomCreateSnake = function (x, y, name, ai) {
        if (ai === void 0) { ai = true; }
        var snake = new Snake_1.default(x, y, name);
        snake.AI = ai;
        GameUI_1.default.instance.gameBox.addChild(snake);
        GameData_1.default.allSnakeList.push(snake);
        if (ai)
            this._snakeAi.push(snake);
    };
    GameConstroll.prototype.onUpdate = function () {
        GameUI_1.default.instance.Update();
        for (var i = 0; i < this._snakeAi.length; i++) {
            this._snakeAi[i].update();
        }
        this._snakeCollision();
    };
    return GameConstroll;
}(Laya.Script));
exports.default = GameConstroll;
},{"../config/Quadtree":3,"../config/ToolUtils":5,"./GameData":9,"./GameUI":10,"./Snake":12}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏数据
 */
var GameData = /** @class */ (function () {
    function GameData() {
    }
    GameData.beanList = []; //小豆子对象
    GameData.allSnakeList = []; //蛇对象数组
    return GameData;
}());
exports.default = GameData;
},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var Rocker_1 = require("./Rocker");
var Camera2D_1 = require("./Camera2D");
var ToolCMD_1 = require("../config/ToolCMD");
var Snake_1 = require("./Snake");
var GameConfig_1 = require("../GameConfig");
var GameData_1 = require("./GameData");
/**
 * 游戏UI
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        GameUI.instance = _this;
        _this.init();
        _this._addEvent();
        return _this;
    }
    GameUI.prototype.init = function () {
        Rocker_1.default.instance.init(this.rockerMove, this.rockerBox); //操作杆
        this.snakeSelf = new Snake_1.default(GameConfig_1.default.width / 2, GameConfig_1.default.height / 2, "player");
        this.gameBox.addChild(this.snakeSelf);
        this.scoreText.changeText(this.snakeSelf.snakeEatBeanNum + "");
        Camera2D_1.default.instance.start(this.worldMap);
        Camera2D_1.default.instance.focus(this.snakeSelf);
        Laya.stage.on(ToolCMD_1.default.ROCKER_MOVE, this, this._getRockerAngle);
    };
    GameUI.prototype._addEvent = function () {
        //加速
        this.speedBtn.on(Laya.Event.MOUSE_DOWN, this, this._onSpeedBtn);
        this.speedBtn.on(Laya.Event.MOUSE_UP, this, this._onSpeedBtn);
        //重新开始
        this.again.on(Laya.Event.CLICK, this, this.createPlayer);
    };
    /**
     * 重新生成自己蛇
     */
    GameUI.prototype.createPlayer = function () {
        this.snakeSelf = new Snake_1.default(GameConfig_1.default.width / 2, GameConfig_1.default.height / 2, "player");
        this.gameBox.addChild(this.snakeSelf);
        Camera2D_1.default.instance.focus(this.snakeSelf);
        GameData_1.default.allSnakeList.push(GameUI.instance.snakeSelf);
        this.scoreText.changeText(this.snakeSelf.snakeEatBeanNum + "");
        this.showUI(UIName.GAME);
    };
    /**
     * 加速的方法回调
     * @param e
     */
    GameUI.prototype._onSpeedBtn = function (e) {
        if (e.type == "mousedown") {
            this.snakeSelf.speedNow = "fast";
        }
        else {
            this.snakeSelf.speedNow = "slow";
        }
    };
    /**
     * 摇杆的回调函数
     * @param angle 弧度
     */
    GameUI.prototype._getRockerAngle = function (angle) {
        this.snakeSelf.upMove(Laya.Utils.toAngle(angle));
    };
    /**
     * 蛇吃道具加一。。
     */
    GameUI.prototype.addSnakeEatBean = function () {
        this.snakeSelf.snakeEatBeanNum++;
        this.scoreText.changeText(this.snakeSelf.snakeEatBeanNum + "");
    };
    /**
     * 更换UI
     */
    GameUI.prototype.showUI = function (uiname) {
        switch (uiname) {
            case UIName.BEGINUI:
                break;
            case UIName.GAME:
                this.gameOver.visible = false;
                break;
            case UIName.OVERUI:
                this.gameOver.visible = true;
                break;
        }
    };
    GameUI.prototype.Update = function () {
        Camera2D_1.default.instance.update();
        this.snakeSelf.update();
    };
    return GameUI;
}(layaMaxUI_1.ui.gameMainUI));
exports.default = GameUI;
var UIName;
(function (UIName) {
    UIName[UIName["BEGINUI"] = 0] = "BEGINUI";
    UIName[UIName["GAME"] = 1] = "GAME";
    UIName[UIName["OVERUI"] = 2] = "OVERUI";
})(UIName = exports.UIName || (exports.UIName = {}));
},{"../GameConfig":1,"../config/ToolCMD":4,"../ui/layaMaxUI":13,"./Camera2D":7,"./GameData":9,"./Rocker":11,"./Snake":12}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ToolCMD_1 = require("../config/ToolCMD");
/*
 * @Description: 操作杆
 * @Author:jwei
 * @Date: 2018-11-22 12:04:22
 * @LastEditTime: 2018-11-23 10:44:05
 * @LastEditors: Please set LastEditors
 */
var Rocker = /** @class */ (function () {
    function Rocker() {
        //多点触控，记录当前触控id
        this._touchId = -1;
    }
    Object.defineProperty(Rocker, "instance", {
        get: function () {
            this._instance = this._instance || new Rocker;
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @msg: 初始化参数
     * @param {type}
     * @return:
     */
    Rocker.prototype.init = function (sp, spBox) {
        this._centerPosition = new Laya.Point();
        this._centerPosition.x = sp.x;
        this._centerPosition.y = sp.y;
        this._bigSp = spBox;
        this._minSp = sp;
        sp.on(Laya.Event.MOUSE_DOWN, this, this._onTouchDown);
        return spBox;
    };
    /**
     * @msg：刚按下执行的方法
     * @param {type}
     * @return:
     */
    Rocker.prototype._onTouchDown = function (ent) {
        if (this._touchId == -1) {
            this._touchId = ent.touchId;
            Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this._onTouchMove);
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this._onTouchUp);
        }
    };
    /**
     * @msg:移动执行的方法
     * @param {type}
     * @return:
     */
    Rocker.prototype._onTouchMove = function (ent) {
        if (this._touchId != -1 && ent.touchId == this._touchId) {
            var R2 = this._bigSp.width / 2 - this._minSp.width / 2;
            var R = Math.sqrt(Math.pow(ent.stageX - this._centerPosition.x, 2) + Math.pow(ent.stageY - this._centerPosition.y, 2));
            //是否大于两圆半径之和
            if (R > R2)
                R = R2;
            var cs = Math.atan2(ent.stageY - this._centerPosition.y, ent.stageX - this._centerPosition.x);
            var cx = R * Math.cos(cs) + this._centerPosition.x, cy = R * Math.sin(cs) + this._centerPosition.y;
            this._minSp.pos(cx, cy);
            Laya.stage.event(ToolCMD_1.default.ROCKER_MOVE, cs);
        }
    };
    /**
     * @msg: 手抬起,中心的圆要弹回去
     * @param {type}
     * @return:
     */
    Rocker.prototype._onTouchUp = function (ent) {
        //判断是否有按下和当前抬起的是否为原来那个点。
        if (this._touchId != -1 && ent.touchId == this._touchId) {
            this._touchId = -1;
            Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this._onTouchMove);
            Laya.stage.off(Laya.Event.MOUSE_UP, this, this._onTouchUp);
            Laya.Tween.to(this._minSp, {
                x: this._centerPosition.x,
                y: this._centerPosition.y,
            }, 100);
        }
    };
    return Rocker;
}());
exports.default = Rocker;
},{"../config/ToolCMD":4}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameUI_1 = require("./GameUI");
var GameData_1 = require("./GameData");
var ToolUtils_1 = require("../config/ToolUtils");
/**
 * 蛇类
 */
var Snake = /** @class */ (function (_super) {
    __extends(Snake, _super);
    function Snake(x, y, id, col) {
        if (col === void 0) { col = Math.round(Math.random() * 4 + 1); }
        var _this = _super.call(this) || this;
        _this.AI = false; //是否为ai;
        _this.bodyList = []; //蛇身数组
        _this.snakeEatBeanNum = 20; //蛇身长度
        _this.oneBodyBeanNum = 5; //吃几颗豆增加一节身体
        _this.speedObj = { "slow": 4, "fast": 6, "rotation": 0 }; //蛇移动速度
        _this.speedNow = "slow";
        _this.kill = false; //是否挂了
        _this.InvincibleSecond = true; //无敌3秒
        _this.pathList = []; //蛇头移动轨迹数组（以最小单位1建立数组）,队列
        _this.id = id;
        _this.snakeColNum = col;
        _this.zOrder = 1;
        _this.width = 40;
        _this.height = 40;
        _this.pivot(20, 20);
        _this.pos(x, y);
        _this.nameText = new Laya.Text();
        _this.nameText.text = _this.id;
        _this.nameText.pos(20, 20);
        _this.nameText.pivot(20, 40);
        _this.addChild(_this.nameText);
        _this.init();
        Laya.timer.once(3000, _this, _this._changeInvin);
        return _this;
    }
    Snake.prototype._changeInvin = function () {
        this.InvincibleSecond = false;
    };
    Snake.prototype.init = function () {
        this.loadImage("images/head" + this.snakeColNum + ".png");
        //初始化蛇身
        for (var i = 0; i < Math.floor(this.snakeEatBeanNum / this.oneBodyBeanNum); i++) {
            this._addBody(this.x, this.y);
        }
    };
    /**
     * 添加一节身体
     * @param x
     * @param y
     */
    Snake.prototype._addBody = function (x, y) {
        var sp = new Laya.Sprite();
        sp.loadImage("images/body" + this.snakeColNum + ".png");
        sp.pivot(20, 20);
        sp.pos(x, y);
        this.bodyList.unshift(sp);
        GameUI_1.default.instance.gameBox.addChild(sp);
    };
    //蛇身移动
    Snake.prototype._bodyMove = function () {
        var obj;
        for (var i = 0; i < this.bodyList.length; i++) {
            obj = this.pathList[20 * i];
            if (obj) {
                this.bodyList[i].pos(obj.x, obj.y);
            }
        }
        this.pathList.splice(this.bodyList.length * 20);
        this._checkSnakeBody();
    };
    //检查蛇身
    Snake.prototype._checkSnakeBody = function () {
        var len = Math.floor(this.snakeEatBeanNum / this.oneBodyBeanNum) - this.bodyList.length;
        if (len) {
            var obj = this.pathList.pop();
            this._addBody(obj["x"], obj["y"]);
        }
    };
    //判断有无吃到东西。。。
    Snake.prototype._checkEatProp = function () {
        for (var i = 0; i < GameData_1.default.beanList.length; i++) {
            if ((ToolUtils_1.default.getDistance(this.x, this.y, GameData_1.default.beanList[i].x, GameData_1.default.beanList[i].y) - GameData_1.default.beanList[i].width / 2) < 30) {
                var bean = GameData_1.default.beanList.splice(i, 1);
                Laya.Tween.to(bean[0], {
                    x: this.x,
                    y: this.y
                }, 30, null, Laya.Handler.create(null, function (obj) {
                    obj.removeSelf();
                }, bean));
                if (this.AI) {
                    this.snakeEatBeanNum++;
                }
                else {
                    GameUI_1.default.instance.addSnakeEatBean();
                }
            }
        }
    };
    //改变方向
    Snake.prototype.upMove = function (angle) {
        this.rotation = angle;
        this.speedObj["rotation"] = Laya.Utils.toRadian(angle);
        this.nameText.rotation = -angle;
    };
    //销毁自身
    Snake.prototype.destroy = function () {
        this.kill = true;
        for (var i = 0; i < this.bodyList.length; i++) {
            // GameUI.instance.gameBox.removeChild(this.bodyList[i]);
            this.bodyList[i].removeSelf();
            this.removeSelf();
        }
    };
    Snake.prototype.update = function () {
        if (this.kill)
            return;
        var speed = this.speedObj[this.speedNow], old = { x: this.x, y: this.y };
        this.x += speed * Math.cos(this.speedObj["rotation"]);
        this.y += speed * Math.sin(this.speedObj["rotation"]);
        if (this.x < 20)
            this.x = 20;
        if (this.x > 2980)
            this.x = 2980;
        if (this.y < 20)
            this.y = 20;
        if (this.y > 1480)
            this.y = 1480;
        for (var i = 0; i < speed; i++) { //记录每次走过的坐标。。1为单位
            var x = (this.x - old.x) * i / speed + old.x, y = (this.y - old.y) * i / speed + old.y;
            this.pathList.unshift({ x: x, y: y });
        }
        this._bodyMove();
        this._checkEatProp();
    };
    return Snake;
}(Laya.Sprite));
exports.default = Snake;
},{"../config/ToolUtils":5,"./GameData":9,"./GameUI":10}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var ui;
(function (ui) {
    var gameMainUI = /** @class */ (function (_super) {
        __extends(gameMainUI, _super);
        function gameMainUI() {
            return _super.call(this) || this;
        }
        gameMainUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.loadScene("gameMain");
        };
        return gameMainUI;
    }(Scene));
    ui.gameMainUI = gameMainUI;
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
